// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int @id @default(autoincrement())
  email     String   @unique
  password  String
  firstname String
  lastname  String
  phone     String   @unique 
  address   String   
  city      String
  state     String
  orders    Order[]
  reviews   Review[]
  createdAt DateTime @default(now())
}

model Product{
  id          Int @id @default(autoincrement())
  name        String
  description String?
  price       Decimal @db.Decimal(10,2)  // Allows values like 99999999.99
  imageUrl    String?
  orders      OrderItem[]
  reviews     Review[]
  createdAt   DateTime @default(now())

}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  items       OrderItem[]
  totalAmount Decimal @db.Decimal(10,2)  // Allows values like 99999999.99
  status OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
}

model OrderItem {
  id        Int    @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model Review {
  id        Int   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  rating    Int      // 1 to 5
  comment   String?
  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}

